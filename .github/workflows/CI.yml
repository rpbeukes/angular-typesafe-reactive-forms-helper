name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: build and test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

#       - name: install dependencies
#         run: npm install

#       - name: tests
#         run: npm run test

#       - name: package file structure `ls -alR ./dist`
#         run: ls -alR ./dist

  integration-test:
    strategy:
      matrix:
        # ng-version: [ng11, ng10, ng9]
        ng-version: [ng11]
    name: integration-test-${{ matrix.ng-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: install dependencies
        run: npm install

      - name: chrome version
        run: google-chrome --version

      - name: create package
        run: npm run remove-all-tgz && npm run pack-tgz

      - name: copy package to integration directory
        run: npm run integration-tests:copy-to-tests

      - name: install package to angular
        run: npm run integration-tests:install:${{ matrix.ng-version }}

      - name: install webdriver-manager 
        run: npm run integration-tests:webdriver:install:${{ matrix.ng-version }}
      
      - name: view latest chromedriver_X.X.X.X.zip
        run: npm run integration-tests:webdriver:view:latest:${{ matrix.ng-version }}

      - name: webdriver-manager clean
        run: npm run integration-tests:webdriver:clean:${{ matrix.ng-version }}

      - name: update webdriver-manager to 97.0.4692.71 
        run: |
          echo "Find the latest ChromeDriver builds here - https://chromedriver.chromium.org/downloads"
          npm run integration-tests:webdriver:update:${{ matrix.ng-version }}
      
      - name: webdriver-manager status
        run: npm run integration-tests:webdriver:status:${{ matrix.ng-version }}

      - name: list installed packages
        run: npm run integration-tests:list-installs:${{ matrix.ng-version }}

      - name: print angular version
        run: npm run integration-tests:version:${{ matrix.ng-version }}

      - name: build angular
        run: npm run integration-tests:build:${{ matrix.ng-version }}

      # - name: run angular test
      #   run: npm run integration-tests:test-ci:${{ matrix.ng-version }}

      - name: run end-to-end prod tests 'ng e2e --prod'
        run: npm run integration-tests:e2e-ci:${{ matrix.ng-version }}:prod

  create-artifact:
    needs: [build, integration-test]
    name: create-artifact
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: install dependencies
        run: npm install

      - name: Create package to ./dist
        run: npm run pack-to-dist-directory

      - name: Create artifact from ./dist
        uses: actions/upload-artifact@v1
        with:
          name: angular-typesafe-reactive-forms-helper
          path: ./dist
