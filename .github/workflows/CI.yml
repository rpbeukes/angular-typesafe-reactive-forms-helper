name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: install dependencies
      run: npm install
      
    - name: tests
      run:  npm run test

  integration-test:
    needs: [build]
    strategy:
      matrix:
        ng-version: [ng10, ng9, ng8, ng7]
    name: integration-test-${{ matrix.ng-version }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: install dependencies
      run: npm install

    - name: create package
      run:  npm run remove-all-tgz && npm run pack-tgz

    - name: copy package to integration directory
      run:  npm run integration-tests:copy-to-tests   
         
    - name: install package to angular and list installed packages
      run:  npm run integration-tests:install:${{ matrix.ng-version }} && npm run integration-tests:list-installs:${{ matrix.ng-version }}

    - name: print angular version
      run:  npm run integration-tests:version:${{ matrix.ng-version }}

    - name: angular build
      run:  npm run integration-tests:build:${{ matrix.ng-version }}

    - name: run angular test
      run:  npm run integration-tests:test-ci:${{ matrix.ng-version }}

  # integration-test-ng9:
  #   name: integration-test-ng9
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - name: install dependencies
  #     run: npm install

  #   - name: create package
  #     run:  npm run remove-all-tgz && npm run pack-tgz

  #   - name: copy package to integration directory
  #     run:  npm run integration-tests:copy-to-tests   
          
  #   - name: install package to angular and list installed packages
  #     run:  npm run integration-tests:install:ng9 && npm run integration-tests:list-installs:ng9

  #   - name: print angular version
  #     run:  npm run integration-tests:version:ng9

  #   - name: angular build
  #     run:  npm run integration-tests:build:ng9
  
  #   - name: run angular test
  #     run:  npm run integration-tests:test-ci:ng9      

  # integration-test-ng8:
  #   name: integration-test-ng8
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - name: install dependencies
  #     run: npm install

  #   - name: create package
  #     run:  npm run remove-all-tgz && npm run pack-tgz

  #   - name: copy package to integration directory
  #     run:  npm run integration-tests:copy-to-tests   
          
  #   - name: install package to angular and list installed packages
  #     run:  npm run integration-tests:install:ng8 && npm run integration-tests:list-installs:ng8

  #   - name: print angular version
  #     run:  npm run integration-tests:version:ng8

  #   - name: angular build
  #     run:  npm run integration-tests:build:ng8
  
  #   - name: run angular test
  #     run:  npm run integration-tests:test-ci:ng8      
      
  # integration-test-ng7:
    # name: integration-test-ng7
    # runs-on: ubuntu-latest

    # steps:
    # - uses: actions/checkout@v2

    # - name: install dependencies
    #   run: npm install

    # - name: create package
    #   run:  npm run remove-all-tgz && npm run pack-tgz

    # - name: copy package to integration directory
    #   run:  npm run integration-tests:copy-to-tests   

    # - name: install package to angular and list installed packages
    #   run:  npm run integration-tests:install:ng7 && npm run integration-tests:list-installs:ng7

    # - name: print angular version
    #   run:  npm run integration-tests:version:ng7

    # - name: angular build
    #   run:  npm run integration-tests:build:ng7

    # - name: run angular test
    #   run:  npm run integration-tests:test-ci:ng7  

  # create-artifact:
  #   needs: [build, integration-test-${{ matrix.ng-version }}]
  #   name: create-artifact
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: install dependencies
  #     run: npm install
           
  #   - name: Create package to ./dist
  #     run:  npm run pack-to-dist-directory

  #   - name: Create artifact from ./dist
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: angular-typesafe-reactive-forms-helper
  #       path: ./dist
